@inject IJSRuntime js
<div class="pull-left" style="margin-top:-25px;">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="active">
                <span>共@(pageModel.PageResult.Page.TotalRecord)条</span>
                <span>@pageModel.PageResult.Page.PageId/@(pageModel.PageResult.Page.TotalPage)页</span>
            </li>
            <li @onclick="() => QueryPageId(1)"><a href="#" aria-label="Previous"><span aria-hidden="true">首页</span></a></li>
            <li @onclick="QueryPre"><a href="#" aria-label="Previous"><span aria-hidden="true">上一页</span></a></li>
            <li @onclick="QueryNext"><a href="#" aria-label="Next"><span aria-hidden="true">下一页</span></a></li>
            <li @onclick="QueryLast"><a href="#" aria-label="Previous"><span aria-hidden="true">末页</span></a></li>
        </ul>
    </nav>
</div>

@code {
    [Parameter]
    public KmsPageModel pageModel { get; set; } = new KmsPageModel();

    [Parameter]
    public EventCallback<KmsPageModel> pageModelChanged { get; set; }

    [Parameter]
    public EventCallback PageEvent { get; set; }

    private bool firstRender { get; set; }

    private void QueryPageId(int i)
    {
        pageModel.PageId = i;
        if (pageModel.PageId < 1)
            pageModel.PageId = 1;
        if (pageModel.PageId > pageModel.PageResult.Page.TotalPage)
            pageModel.PageId = pageModel.PageResult.Page.TotalPage;
        Init();
    }

    private void QueryPre()
    {
        if (pageModel.PageId <= 1)
            return;
        pageModel.PageId--;
        if (pageModel.PageId < 1)
            pageModel.PageId = 1;
        Init();
    }

    private void QueryLast()
    {
        pageModel.PageId = pageModel.PageResult.Page.TotalPage;
        Init();
    }

    private void QueryNext()
    {
        if (pageModel.PageId >= pageModel.PageResult.Page.TotalPage)
            return;

        pageModel.PageId++;

        PageEvent.InvokeAsync(pageModel);

        pageModelChanged.InvokeAsync(pageModel);
    }

    private void Init()
    {
        PageEvent.InvokeAsync(pageModel);

        pageModelChanged.InvokeAsync(pageModel);
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
         if (!this.firstRender)
        {
            js.InvokeVoidAsync("FnLoad");
            this.firstRender = true;
        }
        return base.OnAfterRenderAsync(firstRender);
    }
}